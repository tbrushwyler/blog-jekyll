<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Out of Deadlock</title>
    <description></description>
    <link>http://outofdeadlock.io/</link>
    <atom:link href="http://outofdeadlock.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 19 Feb 2016 21:26:09 +0000</pubDate>
    <lastBuildDate>Fri, 19 Feb 2016 21:26:09 +0000</lastBuildDate>
    <generator>Jekyll v3.1.0</generator>
    
      <item>
        <title>Cross-Platform Bluetooth LE in Xamarin</title>
        <description>&lt;h3 id=&quot;what-is-bluetooth-le&quot;&gt;What is Bluetooth LE?&lt;/h3&gt;

&lt;p&gt;Bluetooth Low Energy (BLE) is an iteration on Bluetooth technology that was built for the Internet of Things. It is &lt;a href=&quot;https://www.bluetooth.com/what-is-bluetooth-technology/bluetooth-technology-basics/low-energy&quot; target=&quot;_blank&quot;&gt;power-friendly and implemented on all major operating systems&lt;/a&gt;, making it a great option for close-range communication with “smart” objects.&lt;/p&gt;

&lt;h3 id=&quot;as-a-developer-what-do-i-need-to-know-about-bluetooth-le&quot;&gt;As a developer, what do I need to know about Bluetooth LE?&lt;/h3&gt;

&lt;p&gt;Every BLE device has a set of endpoints that allow other BLE devices to interact with it. The endpoints are included in the &lt;a href=&quot;https://www.bluetooth.com/specifications/assigned-numbers/generic-attribute-profile&quot; target=&quot;_blank&quot;&gt;Generic Attribute Profile (GATT)&lt;/a&gt; of the device.&lt;/p&gt;

&lt;p&gt;A device has a single GATT profile that makes up its interface. At the top level, a device has a set of services. Each service is made up of a set of characteristics. These characteristics are the actual endpoints that allow interaction with the device. Each characteristic has a set of properties that determine how other devices are allowed to interact with it. Characteristics can allow any combination of the following interactions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Read&lt;/strong&gt;: allows clients to read this characteristic using any of the read operations&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Write&lt;/strong&gt;: allows clients to use the Write Request/Response operation&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;WriteWithoutResponse&lt;/strong&gt;: allows clients to use the Write Command operation&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Notify&lt;/strong&gt;: allows the server to use the Handle Value Notification operation&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Indicate&lt;/strong&gt;: allows the server to use the Handle Value Indication/Confirmation operation&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;SignedWrite&lt;/strong&gt;: allows clients to use the Signed Write Command operation&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;WritableAuxilliaries&lt;/strong&gt;: allows a client to write to the Characteristic User Description descriptor&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Broadcast&lt;/strong&gt;: allows this characteristic value to be placed in advertising packets&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are reserved &lt;a href=&quot;https://developer.bluetooth.org/gatt/services/Pages/ServicesHome.aspx&quot; target=&quot;_blank&quot;&gt;services&lt;/a&gt; and &lt;a href=&quot;https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicsHome.aspx&quot; target=&quot;_blank&quot;&gt;characteristics&lt;/a&gt; for specific types of devices and information. For example, a &lt;a href=&quot;https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.heart_rate.xml&quot; target=&quot;_blank&quot;&gt;heart rate monitor&lt;/a&gt; will always have a service with identifier 0x180D that has characteristics 0x2A37, 0x2A38, and 0x2A39. Before beginning development, be sure to fully document the GATT profile for the device.&lt;/p&gt;

&lt;h3 id=&quot;bluetooth-le-in-ios&quot;&gt;Bluetooth LE in iOS&lt;/h3&gt;

&lt;p&gt;The BLE implementation for iOS is all included in the Core Bluetooth framework. Apple has provided very &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/NetworkingInternetWeb/Conceptual/CoreBluetooth_concepts/CoreBluetoothOverview/CoreBluetoothOverview.html#//apple_ref/doc/uid/TP40013257-CH2-SW1&quot; target=&quot;_blank&quot;&gt;helpful documentation&lt;/a&gt; detailing the data structure and use of this framework.&lt;/p&gt;

&lt;p&gt;Basically, the data structure follows its physical representation. Using a &lt;a href=&quot;https://developer.apple.com/library/prerelease/ios/documentation/CoreBluetooth/Reference/CBCentralManager_Class/index.html&quot; target=&quot;_blank&quot;&gt;CBCentralManager&lt;/a&gt;, you can scan for and connect to devices (&lt;a href=&quot;https://developer.apple.com/library/prerelease/ios/documentation/CoreBluetooth/Reference/CBPeripheral_Class/index.html#//apple_ref/occ/cl/CBPeripheral&quot; target=&quot;_blank&quot;&gt;CBPeripheral&lt;/a&gt;). The central manager’s functionality is limited to device discovery, connection, and disconnection. Once connected to a device, the CBPeripheral object is the main interface for interacting with the device. You can discover the device’s services (&lt;a href=&quot;https://developer.apple.com/library/prerelease/ios/documentation/CoreBluetooth/Reference/CBService_Class/index.html#//apple_ref/doc/c_ref/CBService&quot; target=&quot;_blank&quot;&gt;CBService&lt;/a&gt;), discover a service’s characteristics (&lt;a href=&quot;https://developer.apple.com/library/prerelease/ios/documentation/CoreBluetooth/Reference/CBCharacteristic_Class/index.html#//apple_ref/swift/cl/c:objc(cs)CBCharacteristic&quot; target=&quot;_blank&quot;&gt;CBCharacteristic&lt;/a&gt;), and interact directly with the characteristics.&lt;/p&gt;

&lt;h3 id=&quot;bluetooth-le-in-android&quot;&gt;Bluetooth LE in Android&lt;/h3&gt;
&lt;p&gt;BLE in Android is a little less straight-forward. The main interface is the &lt;a href=&quot;http://developer.android.com/reference/android/bluetooth/BluetoothAdapter.html&quot; target=&quot;_blank&quot;&gt;BluetoothAdapter&lt;/a&gt;, which is required for any and all Bluetooth activity. Once a device (&lt;a href=&quot;http://developer.android.com/reference/android/bluetooth/BluetoothGatt.html&quot; target=&quot;_blank&quot;&gt;BluetoothGatt&lt;/a&gt;) is discovered, you can connect to that object by calling a method (&lt;a href=&quot;http://developer.android.com/reference/android/bluetooth/BluetoothDevice.html#connectGatt(android.content.Context, boolean, android.bluetooth.BluetoothGattCallback)&quot; target=&quot;_blank&quot;&gt;.connectGatt()&lt;/a&gt;) on it. The returned object is the connected device, with which you can interact the same as above.&lt;/p&gt;

&lt;p&gt;The confusing part for me is the device discovery and connection. Callbacks (&lt;a href=&quot;http://developer.android.com/reference/android/bluetooth/BluetoothAdapter.LeScanCallback.html&quot; target=&quot;_blank&quot;&gt;LeScanCallback&lt;/a&gt; &amp;amp; &lt;a href=&quot;http://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html&quot; target=&quot;_blank&quot;&gt;BluetoothGattCallback&lt;/a&gt;) are passed to the discovery and connection to handle errors/success. These classes need to be extended and implemented to properly show devices and connect to them.&lt;/p&gt;

&lt;h3 id=&quot;cross-platform-bluetooth-le&quot;&gt;Cross-Platform Bluetooth LE&lt;/h3&gt;

&lt;p&gt;Sharing code in a cross-platform app means that the implementation details for each platform need to be abstracted away. This gives us a blank canvas on which to build a new interface for BLE.&lt;/p&gt;

&lt;p&gt;For ease of re-use, I have created a nuget package (&lt;a href=&quot;https://www.nuget.org/packages/XamarinBluetoothLE&quot; target=&quot;_blank&quot;&gt;Xamarin.BluetoothLE&lt;/a&gt;) with the iOS and Android Bluetooth LE implementation abstracted away. You can &lt;a href=&quot;https://github.com/tbrushwyler/Xamarin.BluetoothLE&quot; target=&quot;_blank&quot;&gt;view/contribute to the source on Github&lt;/a&gt;. The framework is largely based on the &lt;a href=&quot;https://github.com/xamarin/Monkey.Robotics&quot; target=&quot;_blank&quot;&gt;Monkey.Robotics project&lt;/a&gt;, but with some updates and changes. Because of the confusion introduced by the callbacks in Android, the framework is modeled more similarly to the iOS implementation of BLE. C# introduces the opportunity for raising events when important things happen.&lt;/p&gt;

&lt;p&gt;The documentation for the Xamarin.BluetoothLE package can be found &lt;a href=&quot;https://github.com/tbrushwyler/Xamarin.BluetoothLE/wiki/N_BluetoothLE_Core&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;final-thoughts&quot;&gt;Final Thoughts&lt;/h3&gt;
&lt;p&gt;With the incredibly fast growth of the IoT world, Bluetooth (specifically BLE) is a valid option for communication with smart objects. My hope is that this cross-platform library will help app developers to be able to look past the nitty gritty details of BLE implementation and to instead focus on using this technology to create great things.&lt;/p&gt;

&lt;h4 id=&quot;xamarinbluetoothle-links&quot;&gt;Xamarin.BluetoothLE links&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nuget.org/packages/XamarinBluetoothLE&quot;&gt;View the nuget package&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tbrushwyler/Xamarin.BluetoothLE/&quot;&gt;View the source code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tbrushwyler/Xamarin.BluetoothLE/wiki/N_BluetoothLE_Core&quot;&gt;View the documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 11 Feb 2016 15:00:00 +0000</pubDate>
        <link>http://outofdeadlock.io/xamarin-bluetooth-le</link>
        <guid isPermaLink="true">http://outofdeadlock.io/xamarin-bluetooth-le</guid>
        
        <category>C#</category>
        
        <category>Bluetooth</category>
        
        <category>LE</category>
        
        <category>Xamarin</category>
        
        
      </item>
    
      <item>
        <title>2015 Underhanded C Winner</title>
        <description>
</description>
        <pubDate>Thu, 04 Feb 2016 08:30:00 +0000</pubDate>
        <link>http://outofdeadlock.io/reads/2016/02/underhanded-c-winner</link>
        <guid isPermaLink="true">http://outofdeadlock.io/reads/2016/02/underhanded-c-winner</guid>
        
        <category>C</category>
        
        
      </item>
    
      <item>
        <title>How I fixed Atom</title>
        <description>
</description>
        <pubDate>Fri, 29 Jan 2016 10:40:00 +0000</pubDate>
        <link>http://outofdeadlock.io/reads/2016/01/how-i-fixed-atom</link>
        <guid isPermaLink="true">http://outofdeadlock.io/reads/2016/01/how-i-fixed-atom</guid>
        
        <category>Atom</category>
        
        <category>regex</category>
        
        <category>regular expressions</category>
        
        
      </item>
    
      <item>
        <title>The technology behind preview photos</title>
        <description>
</description>
        <pubDate>Fri, 07 Aug 2015 16:07:00 +0000</pubDate>
        <link>http://outofdeadlock.io/reads/2015/08/the-technology-behind-preview-photos</link>
        <guid isPermaLink="true">http://outofdeadlock.io/reads/2015/08/the-technology-behind-preview-photos</guid>
        
        <category>optimization</category>
        
        
      </item>
    
      <item>
        <title>External Posts in Jekyll</title>
        <description>
</description>
        <pubDate>Tue, 04 Aug 2015 09:26:00 +0000</pubDate>
        <link>http://outofdeadlock.io/reads/2015/08/external-posts-in-jekyll</link>
        <guid isPermaLink="true">http://outofdeadlock.io/reads/2015/08/external-posts-in-jekyll</guid>
        
        <category>Jekyll</category>
        
        
      </item>
    
      <item>
        <title>Deploying Jekyll site to Github Pages with Travis CI</title>
        <description>&lt;h3 id=&quot;the-problem&quot;&gt;The problem&lt;/h3&gt;

&lt;p&gt;I want to set up continuous integration for this blog so that I can write posts, test that all links are valid, and then publish the changes.&lt;/p&gt;

&lt;h3 id=&quot;the-solution&quot;&gt;The solution&lt;/h3&gt;

&lt;p&gt;I borrowed most of this solution from &lt;a href=&quot;http://ellismichael.com/technical/2015/06/12/using-travis-ci-with-github-pages/&quot;&gt;Ellis Michael’s blog post&lt;/a&gt; about using Travis CI with Github pages. Combined with &lt;a href=&quot;http://jekyllrb.com/docs/continuous-integration/&quot;&gt;Jekyll’s CI documentation&lt;/a&gt;, we were able to come up with a solution that allows us to build, test, and publish on each commit to master.&lt;/p&gt;

&lt;p&gt;At a high level, Travis CI will check out the “master” branch, clean the site output, build the site using Jekyll, run tests to verify that all links are connected, and then push to the “gh-pages” branch.&lt;/p&gt;

&lt;p&gt;The most difficult part about figuring out this problem was to combine all the .travis.yml snippets to create one script that worked. So, here are the important contents of my configuration files:&lt;/p&gt;

&lt;figure&gt;
	&lt;figcaption&gt;.travis.yml&lt;/figcaption&gt;

	
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;s&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ruby&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2.1&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bundle install&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;before_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;openssl aes-256-cbc -K ......&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# replace with the line that travis encrypt-file printed out&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;chmod go-rwx .travisdeploykey&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;eval `ssh-agent -s`&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssh-add .travisdeploykey&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git config user.name &quot;Travis-CI&quot;&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git config user.email &quot;noreply@travis-ci.org&quot;&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;COMMIT_MESSAGE=&quot;Publishing site on `date &quot;+%Y-%m-%d %H:%M:%S&quot;` from `git log -n 1 --format=&#39;commit %h - %s&#39;`&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rake cibuild&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;set -e&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rake build&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git checkout -b gh-pages&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;outofdeadlock.io&quot; &amp;gt; _site/CNAME&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git add -f _site/&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-m&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${COMMIT_MESSAGE}&quot;&#39;&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git filter-branch -f --subdirectory-filter _site/&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git push -f git@github.com:tbrushwyler/outofdeadlock.git gh-pages:gh-pages&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;NOKOGIRI_USE_SYSTEM_LIBRARIES=true&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;/figure&gt;

&lt;figure&gt;
	&lt;figcaption&gt;Rakefile&lt;/figcaption&gt;

	
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;html/proofer&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:default&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:clean&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;rm -rf ./_site&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:build&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jekyll build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:rebuild&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	&lt;span class=&quot;no&quot;&gt;HTML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Proofer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./_site&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;ss&quot;&gt;:href_ignore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
			&lt;span class=&quot;s2&quot;&gt;&quot;#&quot;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
		&lt;span class=&quot;ss&quot;&gt;:disable_external&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:cibuild&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:rebuild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
	&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;/figure&gt;
</description>
        <pubDate>Mon, 03 Aug 2015 16:30:00 +0000</pubDate>
        <link>http://outofdeadlock.io/deploying-jekyll-to-gh-pages</link>
        <guid isPermaLink="true">http://outofdeadlock.io/deploying-jekyll-to-gh-pages</guid>
        
        <category>Jekyll</category>
        
        <category>Travis CI</category>
        
        <category>continuous integration</category>
        
        <category>tests</category>
        
        
      </item>
    
      <item>
        <title>Sticky footer without flexbox (CSS-Only)</title>
        <description>&lt;h3 id=&quot;the-problem&quot;&gt;The problem&lt;/h3&gt;

&lt;p&gt;I want my variable-height pages to share a footer that will stick to the bottom of the page. Flexbox is the best way to solve this problem, but &lt;a href=&quot;http://caniuse.com/#search=flexbox&quot; title=&quot;Flexbox Compatibility&quot;&gt;it is &lt;strong&gt;not&lt;/strong&gt; compatible with all browsers&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;text-center gutter-bottom&quot;&gt;
&lt;img src=&quot;/assets/images/20150707_sticky-footers/sticky-footer.png&quot; alt=&quot;Sticky footers, yay!&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;With a little &lt;code class=&quot;highlighter-rouge&quot;&gt;display: table;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;display: table-row;&lt;/code&gt; magic, there is a very simple CSS-only solution.&lt;/p&gt;

&lt;h3 id=&quot;the-solution&quot;&gt;The solution&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        ...
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrapper&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- header and main content block go here --&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- anything you want! --&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;#wrapper&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;border-collapse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;collapse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nn&quot;&gt;#content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;table-row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;footer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;table-row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;margin-top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$footer-margin-top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;border-top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$footer-margin-top&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;transparent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We used this technique for this site’s footer - so call me a liar if it isn’t sticky! If you’re looking for a widely-compatible CSS-only sticky footer, this is the way to go.&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Aug 2015 15:52:00 +0000</pubDate>
        <link>http://outofdeadlock.io/sticky-footers-without-flexbox</link>
        <guid isPermaLink="true">http://outofdeadlock.io/sticky-footers-without-flexbox</guid>
        
        <category>HTML</category>
        
        <category>CSS</category>
        
        <category>SASS</category>
        
        <category>layout</category>
        
        
      </item>
    
  </channel>
</rss>
