---
title: Project Euler
layout: post
date: 2015-11-03 15:48:00
permalink: project-euler
tags:
published: false
---

### Problem 1
#### Multiples of 3 and 5
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.

### Solution 1
{% highlight js linenos %}
var solve = function() {
	var result = 0;
	for (var i = 0; i < 1000; i++) {
		result += !(i % 3 && i % 5) && i;
	}

	return result;
};

console.log(solve());
{% endhighlight %}

### Problem 2
#### Even Fibonacci numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

### Solution 2
{% highlight js linenos %}
var solve = function() {
	var result = 0;
	for (var i = 1, j = 1, k = 1; i < 4000000; (k = i) && (i += j) && (j = k)) {
		result += !(i % 2) && i;
	}

	return result;
};

console.log(solve());
{% endhighlight %}

### Problem 3
#### Largest prime factor
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?

### Solution 2
{% highlight js linenos %}
var factor = function(x) {
	var factors = [];

	for (var i = Math.floor((x / 2) + 1); Math.max.apply(null, factors) == 0 || i > (x / Math.max.apply(null, factors)); i--) {
		if (x % i == 0) {
			factors.push(i);
		}
	}

	for (var i = factors.length - 1; i > 0; i--) {
		factors.push(x / factors[i]);
	}

	return factors;
};

var getGreatestFactor = function(x) {
	for (var i = x - 1; i > 1; i--) {
		if (x % i == 0)
			return i;
	}

	return 1;
};

var solve = function() {
	var factors = factor(13195).sort(function(a, b) { return b - a; });
	for (var f in factors) {
		console.log(f);
		var subfactors = factor(f);
		if (subfactors.length <= 2)
			return f;
	}
	return 1;
};

console.log(solve());
{% endhighlight %}